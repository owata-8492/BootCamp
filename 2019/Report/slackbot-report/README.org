#+TITLE: 資料の執筆の仕方
#+AUTHOR:
#+EMAIL:
#+DATE:
#+OPTIONS: H:3 num:2 toc:nil
#+OPTIONS: ^:nil @:t \n:nil ::t |:t f:t TeX:t
#+OPTIONS: skip:nil
#+OPTIONS: author:t
#+OPTIONS: email:nil
#+OPTIONS: creator:nil
#+OPTIONS: timestamp:nil
#+OPTIONS: timestamps:nil
#+OPTIONS: d:nil
#+OPTIONS: tags:t
#+TEXT:
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: ja
#+STARTUP: odd
#+LATEX_CLASS: jsarticle
#+LATEX_CLASS_OPTIONS: [a4j]
#+LATEX_HEADER: \usepackage{plain-article}
# #+LATEX_HEADER: \renewcommand\maketitle{}
# #+LATEX_HEADER: \pagestyle{empty}
# #+LaTeX: \thispagestyle{empty}

* 概要
  本文書は，乃村研の学生が資料を執筆する際の準備について記述している．
  本文書では，LaTeX を使って資料を記述することを前提としている．

* リポジトリの準備
** テンプレートのコピー
   作業を行うディレクトリにこのディレクトリ以下のREADME.org以外のすべてのファイルをコピーする．

** TeX ファイルの名前変更
   テンプレート中の =myproject.tex= を扱いやすいファイル名に変更する．
   例えば，仕様書であれば， =specification.tex= とする．

   #+BEGIN_SRC shell-script
     $ mv myproject.tex specification.tex
   #+END_SRC

   また，TeX ファイルの名前に合わせて make のターゲットを変更する．
   プロジェクト固有の設定は， =project.mk= ファイルに記述しておくと，
   Makefile から include される．
   =mybibdata.bib= は，参考文献用DBファイルである．
   =figs/fig.pdf= は，図をまとめたpdfファイルである．

   #+BEGIN_SRC makefile
     #####################################################################
     # Files in the project
     #####################################################################

     # if the main TeX file is ``myproject.tex'', set:
     #   PROJECT = myproject
     PROJECT = specification
     PROJECT_BIB = mybibdata.bib

     # All figure files are extracted from the single PDF file: FIG_MASTER_FILE.
     # FIG_PAGES indicates which pages are extracted and used in the main TeX file.
     #
     # For example:
     #   FIG_MASTER_FILE = figs/fig.pdf
     #   FIG_PAGES     = 1 2 3 4 5
     # makes:
     #   figs/fig1.pdf ... figs/fig5.pdf from figs/fig.pdf
     #
     FIG_MASTER_FILE = figs/fig.pdf
     FIG_PAGES       = 1 2 3 4 5
   #+END_SRC

** TeX 組版 (コンパイル) の確認

   =Makefile= のあるディレクトリで， =make= を実行すれば，
   資料の pdf ファイルが生成される．

** 不要なファイルの変更，削除

   テンプレートを正しく利用できたら，
   以下のファイルは，自身の資料に合う内容に変更するか削除し，
   そのまま commit に入らないように気を付ける．

   + README.org (このファイル)
   + *.pdf

   なお， =project.mk= にて， =FIG_MASTER_FILE= を設定した際には， =FIG_MASTER_FILE= 以外のファイルを消すこと．
   また，資料が完成した際には，最終成果物としてpdfを commit に追加したほうがよい．

* トラブルシューティング
** TeXのバージョンによる図の挿入方法の違い
   TeX のバージョンによって，図を挿入する作法が若干異なる．
   比較的最近のTeX (texlive) を使って xbb 形式を用いていれば，
   テンプレートの =Makefile= がそのまま利用できるが，
   少し古い ptex を用いる場合は，bb 形式であるため，図の挿入に失敗する．

   できれば，新しい texlive を使うことを推奨するが，texlive の更新が不可能な場合は，
   Makefile 中の xbb を全て bb に置き換える．例えば，以下の通り．
   他にも変更個所がいくつかあるので気を付ける．
   #+BEGIN_SRC diff
     @@ -80,7 +80,7 @@ FIG_PAGES       = 1 2 3 4 5

      TEX_FILES      = ${PROJECT}.tex
      FIG_PDF_FILES := $(foreach n, $(FIG_PAGES), $(call addpage,$(FIG_MASTER_FILE),$(n)))
     -FIG_EBB_FILES := $(foreach n, $(FIG_PAGES), $(call addpage,$(FIG_MASTER_FILE),$(n),xbb))
     +FIG_EBB_FILES := $(foreach n, $(FIG_PAGES), $(call addpage,$(FIG_MASTER_FILE),$(n),bb))

      #####################################################################
      # Common rules
     @@ -98,7 +98,7 @@ ${FIG_PDF_FILES} : ${FIG_MASTER_FILE}
                     -dLastPage=$(call pagenum,$*)   \
                     -sOutputFile=$@ ${FIG_MASTER_FILE} 2>/dev/null

     -${FIG_EBB_FILES} : %.xbb : %.pdf
     +${FIG_EBB_FILES} : %.bb : %.pdf
             @echo "Making $@ from $<"
             @${GS} -sDEVICE=bbox -r100 $< 2> $@
   #+END_SRC

* 資料作成の諸注意
  リポジトリ構成等の資料作成の諸注意については,
  別途以下を参照のこと．(GitHub のログインが必要)．

  1) [[https://github.com/nomlab/nompedia/wiki/About-presentation][研究会発表の準備手順と注意点]]
  2) [[https://github.com/nomlab/nompedia/wiki/About-paper-submission#user-content-%E8%AB%96%E6%96%87%E5%9F%B7%E7%AD%86%E3%81%AE%E9%9A%9B%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9][論文執筆の際の注意点]]

  リポジトリ作成の際に以下を注意すること．
  + 不要なファイルはコミットしない．
  + 他人が後から使えるように配慮する．(資料の cls ファイルや fig も入れておく)
  + 独自の方法でコンパイルが必要な場合は，その旨を README に記載する．
